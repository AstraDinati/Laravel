chunkWhile()
Метод chunkWhile разбивает коллекцию на несколько меньших по размеру коллекций на основе результата переданного замыкания. Переменная $chunk, переданная в замыкание, может использоваться для проверки предыдущего элемента:

$collection = collect(str_split('AABBCCCD'));

$chunks = $collection->chunkWhile(function ($value, $key, $chunk) {
    return $value === $chunk->last();
});

$chunks->all();

// [['A', 'A'], ['B', 'B'], ['C', 'C', 'C'], ['D']]

\\человеческое объяснение 
->last()  в данном случае указывает на то, что переменная $chunk принимает значение итерации, 
следующей за той, которую сейчас проходит $value

Метод last возвращает последний элемент в коллекции, который проходит указанную проверку 
истинности:

collect([1, 2, 3, 4])->last(function ($value, $key) {
    return $value < 3;
});

// 2
Вы также можете вызвать метод last без аргументов, чтобы получить последний элемент коллекции. 
Если коллекция пуста, возвращается null:

collect([1, 2, 3, 4])->last();

// 4

$chunkWhile = $collects->chunkWhile(function ($value, $key, $chunk) {
            if (!$chunk) {
                return $value % 2 === 1;
            }
            return $value % 2 === $chunk->last() % 2;
            })->toArray();

если указать first() вместо last(), то $chunk и $value поменяются местами, в $chunk будет
значение элемента коллекции из ИТЕРАЦИИ следующей до ТОЙ, которую проходит $value 