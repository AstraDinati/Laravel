Данные прошлого запроса
Laravel позволяет вам сохранить входные данные из текущего запроса на время выполнения следующего запроса. Этот функционал особенно полезен для повторного заполнения форм 
после выявления ошибок валидации. Если вы используете валидацию Laravel, то вам не придется напрямую использовать эти методы кратковременного хранения входных данных в сессии, 
так как некоторые встроенные средства валидации Laravel вызывают их автоматически.


Кратковременное сохранение входных данных в сессии
Метод flash класса Illuminate\Http\Request будет сохранять входные данные в сессии, чтобы они были доступны только во время следующего запроса пользователя к приложению:

$request->flash();
Вы также можете использовать методы flashOnly и flashExcept для передачи подмножества данных запроса в сессию. Эти методы полезны для скрытия конфиденциальной информации из
 сессии, например, пароли:

$request->flashOnly(['username', 'email']);

$request->flashExcept('password');

Кратковременное сохранение при перенаправлении
Так как вам часто нужно выполнять кратковременное сохранение входных данных в сессии, а затем перенаправлять на предыдущую страницу, вы можете легко связать сохранение данных 
с перенаправлением, используя метод withInput:

return redirect('form')->withInput();

return redirect()->route('user.create')->withInput();

return redirect('form')->withInput(
    $request->except('password')
);

Получение данных прошлого запроса
Чтобы получить кратковременно сохраненные входные данные из предыдущего запроса, вызовите метод old экземпляра Illuminate\Http\Request. Метод old извлечет ранее записанные
 входные данные из сессии:

$username = $request->old('username');
Laravel также содержит глобального помощника old. Если вы показываете данные из предыдущего запроса в шаблоне Blade, удобнее использовать помощник old для повторного заполнения
 формы. Если для поля не были указаны данные в предыдущем запросе, то будет возвращен null:

<input type="text" name="username" value="{{ old('username') }}">